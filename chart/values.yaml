# Default values for jaeger-ydb-store.

ydb: 
  # DB endpoint host:port to connect to
  endpoint:

  # Database path
  database:

  # Folder to store data in
  folder:

  # Service account id for Yandex.Cloud authorization
  saId: ""

  # Service account key id for Yandex.Cloud authorization
  saKeyId: ""

  # Service account private key for Yandex.Cloud authorization
  saPrivateKey: ""

  # Use metadata to authorize requests
  useMetaAuth: true

  env:
    # DB connect timeout
    # YDB_CONNECT_TIMEOUT: 10s

    # Write queries timeout
    # YDB_WRITE_TIMEOUT: 1s

    # Read queries timeout
    # YDB_READ_TIMEOUT: 10s

    # Controls number of parallel read subqueries
    # YDB_READ_QUERY_PARALLEL: 16

    # Max operation names to fetch for service
    # YDB_READ_OP_LIMIT: 5000

    # Max service names to fetch
    # YDB_READ_SVC_LIMIT: 1000

    # DB session pool size
    # YDB_POOL_SIZE: 100

    # DB query cache size
    # YDB_QUERY_CACHE_SIZE: 50

    # Span buffer size for batch writer
    # YDB_WRITER_BUFFER_SIZE: 1000

    # Number of spans in batch write calls
    # YDB_WRITER_BATCH_SIZE: 100

    # Number of workers processing batch writes
    # YDB_WRITER_BATCH_WORKERS: 10

    # Span buffer size for indexer
    # YDB_INDEXER_BUFFER_SIZE: 1000

    # Maximum trace_id count in a sinigle index record
    # YDB_INDEXER_MAX_TRACES: 100

    # Maximum amount of time for indexer to batch trace_id—ã for index records
    # YDB_INDEXER_MAX_TTL: 5s

    # Number of partitioned tables per day. Changing it requires recreating full data set
    # YDB_SCHEMA_NUM_PARTITIONS: 10

    # PLUGIN_LOG_PATH: /tmp/plugin.log

    # Delete partition tables older than this value
    # WATCHER_AGE: 24h

    # Check interval
    # WATCHER_INTERVAL: 5m

    # Enable table split by load feature
    # YDB_FEATURE_SPLIT_BY_LOAD: false

    # Enable table compression feature, used for span storage
    # YDB_FEATURE_COMPRESSION: false


image:
  query:
    pullPolicy: IfNotPresent
    repository: cr.yandex/yc/jaeger-ydb-query
    tag: v1.6.0
  collector:
    pullPolicy: IfNotPresent
    repository: cr.yandex/yc/jaeger-ydb-collector
    tag: v1.6.0
  watcher:
    pullPolicy: IfNotPresent
    repository: cr.yandex/yc/jaeger-ydb-watcher
    tag: v1.6.0
  agent:
    pullPolicy: IfNotPresent
    repository: jaegertracing/jaeger-agent
    tag: 1.27

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

collector:
  replicas: 3
  affinity: {}
  nodeSelector: {}
  tolerations: []
  securityContext: {}
  podSecurityContext: {}
  podAnnotations: {}

query:
  replicas: 3
  affinity: {}
  nodeSelector: {}
  tolerations: []
  securityContext: {}
  podSecurityContext: {}
  podAnnotations: {}

watcher:
  replicas: 2
  affinity: {}
  nodeSelector: {}
  tolerations: []
  securityContext: {}
  podSecurityContext: {}
  podAnnotations: {}

agent:
  enabled: true
  podSecurityContext: {}
  securityContext: {}
  annotations: {}
  pullPolicy: IfNotPresent
  cmdlineParams: {}
  extraEnv: []
  daemonset:
    useHostPort: false
    updateStrategy: {}
      # type: RollingUpdate
      # rollingUpdate:
      #   maxUnavailable: 1
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  extraSecretMounts: []
  # - name: jaeger-tls
  #   mountPath: /tls
  #   subPath: ""
  #   secretName: jaeger-tls
  #   readOnly: true
  extraConfigmapMounts: []
  # - name: jaeger-config
  #   mountPath: /config
  #   subPath: ""
  #   configMap: jaeger-config
  #   readOnly: true
  useHostNetwork: false
  dnsPolicy: ClusterFirst
  priorityClassName: ""


service:
  collector:
    type: ClusterIP
    # headless: false
    # ipFamilies:
    #   - IPv6
    #   - IPv4
    # ipFamilyPolicy: PreferDualStack
    annotations: {}
    ports:
      grpc:
        name: grpc
        port: 14250
        # nodePort: 34250
      http:
        name: http
        port: 14268
  query:
    type: LoadBalancer
    annotations: {}
    ports:
      http:
        name: http
        port: 16686
  agent:
    type: ClusterIP
    annotations: {}
    ports:
      zipkin-compact:
        # Accept zipkin.thrift over compact thrift protocol
        name: zipkin-compact
        port: 5775
        protocol: UDP
      jaeger-compact:
        # Accept jaeger.thrift over compact thrift protocol
        name: jaeger-compact
        port: 6831
        protocol: UDP
      jaeger-binary:
        # Accept jaeger.thrift over binary thrift protocol
        name: jaeger-binary
        port: 6832
        protocol: UDP
      http:
        # (HTTP) serve configs, sampling strategies
        name: http
        port: 5778
        protocol: TCP

resources:
  watcher:
    limits: {}
    requests: {}
  collector:
    limits: {}
    requests: {}
  query:
    limits: {}
    requests: {}
  agent:
    limits: {}
    requests: {}


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
